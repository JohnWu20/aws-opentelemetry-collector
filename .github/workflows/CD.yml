name: CD

# listen on tag with name like v1.0.0
on:
  push:
    tags:
      - v*

env:
  IMAGE_NAMESPACE: josephwy
  IMAGE_NAME: awscollector
  PACKAGE_CACHE_KEY: "cached_tested_packages_${{ github.run_id }}"
  S3_LINK_TABLE_CACHE_KEY: "cached_s3_link_table_${{ github.run_id }}"

jobs:
  release-checking:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout aws-opentelemetry-collector
        uses: actions/checkout@v2

      - name: [todo] Checking if the related commit has passed the Soaking test
        run: echo "Checking Soaking test"

      - name: Configure AWS Credentials, TODO change to the release account credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.INTEG_TEST_AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.INTEG_TEST_AWS_KEY_SECRET }}
          aws-region: us-west-2

      - name: Get the version
        id: get_version
        run: echo ::set-output name=version::$(echo $GITHUB_REF | cut -d / -f 3)

      - name: download packages as release candidate from s3
        uses: wyTrivail/aocintegtest@master
        with:
          running_type: candidate
          opts: "-t=DownloadCandidate -s=.aoc-stack-test.yml -p=${{ steps.get_version.outputs.version }} -g=${{ github.sha }}"

      - name: cp stack into packages
        run: |
          cp .aoc-stack-test.yml build/packages/
          cp .aoc-stack-release.yml build/packages/      

      - run: ls -R      

      - name: Cache packages
        uses: actions/cache@v2
        with:
          key: "${{ env.PACKAGE_CACHE_KEY }}"
          path: build/packages

  release-to-s3:
    runs-on: ubuntu-latest
    needs: release-checking
    outputs:
      s3_links: "${{ steps.release-to-s3.outputs.task_response }}"
    steps:
      - name: Restore cached packages
        uses: actions/cache@v2
        with:
          key: "${{ env.PACKAGE_CACHE_KEY }}"
          path: build/packages

      - name: Configure AWS Credentials, TODO change to the release account credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.INTEG_TEST_AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.INTEG_TEST_AWS_KEY_SECRET }}
          aws-region: us-west-2

      - name: Release to S3
        id: release-to-s3
        uses: wyTrivail/aocintegtest@master
        with:
          running_type: release
          opts: "-t=S3Release -s=build/packages/.aoc-stack-release.yml" 

  release-to-dockerhub:
    runs-on: ubuntu-latest
    needs: release-checking
    steps:
      - name: Restore cached packages
        uses: actions/cache@v2
        with:
          key: "${{ env.PACKAGE_CACHE_KEY }}"
          path: build/packages

      - name: Login Dockerhub
        uses: azure/docker-login@v1
        with:
          username: "${{ secrets.TEST_DOCKERHUB_USERNAME }}"
          password: "${{ secrets.TEST_DOCKERHUB_PASSWORD }}"

      - name: Push Image to dockerhub
        id: push-to-dockerhub
        run: |
          TAG=`cat build/packages/VERSION`
          docker load < build/packages/awscollector.tar
          docker tag $IMAGE_NAME $IMAGE_NAMESPACE/$IMAGE_NAME:$TAG
          docker tag $IMAGE_NAME $IMAGE_NAMESPACE/$IMAGE_NAME:latest
          docker push $IMAGE_NAMESPACE/$IMAGE_NAME:$TAG
          docker push $IMAGE_NAMESPACE/$IMAGE_NAME:latest

  release-to-github:
    runs-on: ubuntu-latest
    needs: [release-to-s3, release-to-dockerhub]
    steps:
      - uses: actions/checkout@v2
     
      - name: Generate release-note
        run: sh tools/release/generate-release-note.sh "`cat VERSION`"
        
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: release-note
          draft: true
          prerelease: true
